name: Deploy Prod environment

concurrency:
  group: deploy-${{ vars.ENVIRONMENT }}
  cancel-in-progress: false

on:
  workflow_dispatch:
    inputs:
      confirm-deploy:
        type: boolean
        required: true
        description: 'Set to confirm deploy to the PRODUCTION environment'
      confirm-destroy:
        type: boolean
        required: true
        description: 'Set to confirm destroy the PRODUCTION environment'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-prod:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Setup: AWS Login and Terraform init'
        uses: ./.github/actions/terraform-init
        with:
          environment: ${{ vars.ENVIRONMENT }}
          region: ${{ vars.AWS_REGION }}
          iam-role: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/tf-admin

      - name: 'Test: check and validate'
        uses: ./.github/actions/terraform-test
        with:
          environment: ${{ vars.ENVIRONMENT }}
          region: ${{ vars.AWS_REGION }}
          iam-role: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/tf-admin

      - name: 'Deploy: to ${{ vars.ENVIRONMENT }}'
        uses: ./.github/actions/terraform-apply
        if: ${{ github.ref_type == 'tag' && github.event.inputs.confirm-deploy == 'true' }}
        with:
          environment: ${{ vars.ENVIRONMENT }}
          region: ${{ vars.AWS_REGION }}
          iam-role: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/tf-admin

      # WE ARE ADDING A DESTROY STEP BECAUSE IS A SANDBOX PIPELINE - YOU NORMALLY DON'T DESTROY PROD ENV
      - name: 'Destroy: to ${{ vars.ENVIRONMENT }}'
        uses: ./.github/actions/terraform-destroy
        if: ${{ github.ref_type == 'tag' && github.event.inputs.confirm-destroy == 'true' }}
        with:
          environment: ${{ vars.ENVIRONMENT }}
          region: ${{ vars.AWS_REGION }}
          iam-role: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/tf-admin
